@model System.Collections.IEnumerable
           
@Html.DevExpress().TreeList(settings => {
    settings.Name = "TreeList";
    settings.KeyFieldName = "EmployeeID";
    settings.ParentFieldName = "SupervisorID";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "TreeListPartial" };
    settings.SettingsEditing.AddNewNodeRouteValues = new { Controller = "Home", Action = "TreeListAddNewPartial" };
    settings.SettingsEditing.UpdateNodeRouteValues = new { Controller = "Home", Action = "TreeListUpdatePartial" };
    settings.SettingsEditing.NodeDragDropRouteValues = new { Controller = "Home", Action = "TreeListMovePartial" };
    settings.SettingsEditing.DeleteNodeRouteValues = new { Controller = "Home", Action = "TreeListDeletePartial" };

    settings.CommandColumn.Visible = true;
    settings.CommandColumn.EditButton.Visible = true;
    settings.CommandColumn.NewButton.Visible = true;
    settings.CommandColumn.DeleteButton.Visible = true;

    settings.Columns.Add("FirstName");
    settings.Columns.Add("MiddleName");
    settings.Columns.Add("LastName");
    settings.Columns.Add("Title");

    settings.PreRender = (s, e) => {
        MVCxTreeList treeList = (MVCxTreeList)s;
        treeList.ExpandAll();
    };

    settings.CustomJSProperties = (s, e) => {
        MVCxTreeList treeList = (MVCxTreeList)s;
        
        var visibleNodes = treeList.GetVisibleNodes();
        var dictionary = new System.Collections.Generic.Dictionary<object, string>();

        for (int i = 0; i < visibleNodes.Count; i++) {
            object[] rowValues = new object[] { 
                visibleNodes[i].GetValue(treeList.KeyFieldName), 
                visibleNodes[i].GetValue("RowVersion"), 
            };

            dictionary[rowValues[0].ToString()] = Convert.ToBase64String((byte[])rowValues[1]);
        }
        
        e.Properties["cpRowVersions"] = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(dictionary);

        if (ViewData["EditError"] != null)
            e.Properties["cpEditError"] = ViewData["EditError"];
    };

    settings.ClientSideEvents.BeginCallback = "TreeList_BeginCallback";
    settings.ClientSideEvents.EndCallback = "TreeList_EndCallback";
    
}).SetEditErrorText((string)ViewData["EditError"]).Bind(Model).GetHtml()